---
swagger: "2.0"
info:
  description: "This is Documentation of APIs for OOD Power Saver HQ Project"
  version: "1.0.5"
  title: "OOD - Power Saver HQ"
  contact:
    email: "apiteam@swagger.io"
host: "localhost"
tags:
  - name: "user"
    description: "Everything related to User Info"
  - name: "addresses"
    description: "Everything related to Addresses of User"
  - name: "appliances"
    description: "Everything related to Appliances in each Address of User"
  - name: "billing"
    description: "Operations about Bills and Payments Done for bills"
schemes:
  - "http"
paths:
  /login:
    post:
      tags:
        - "user"
      summary: "Login to a registered Account"
      description: ""
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "User object that is trying to login"
          required: true
          schema:
            $ref: "#/definitions/Pet"
      responses:
        200:
          description: "successful login"
          schema:
            $ref: "#/definitions/login_success"
  /register-user:
    post:
      tags:
        - "user"
      summary: "Create user"
      description: "This can only be done by the logged in user."
      operationId: "createUser"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Created user object"
          required: true
          schema:
            $ref: "#/definitions/User"
      responses:
        default:
          description: "successful operation"

    /get-addresses-per-user:
      post:
        tags:
          - "addresses"
        summary: "Get Addresses"
        description: "This API returns all the addresses for a particular UserID"
        operationId: "createUser"
        consumes:
          - "application/json"
        produces:
          - "application/json"
        parameters:
          - in: "body"
            name: "body"
            description: "Created user object"
            required: true
            schema:
              $ref: "#/definitions/UserID"
        responses:
          200:
            description: "successful retrieval"
            schema:
              $ref: "#/definitions/addresses_per_user_success"
    /get-addresses-by-id:
      post:
        tags:
          - "addresses"
        summary: "Get Addresses"
        description: "This API returns all the details of a particular addresses from its ID"
        consumes:
          - "application/json"
        produces:
          - "application/json"
        parameters:
          - in: "body"
            name: "body"
            description: "Created user object"
            required: true
            schema:
              $ref: "#/definitions/AddressID"
        responses:
          200:
            description: "successful retrieval"
            schema:
              $ref: "#/definitions/addresses_per_user_success"
securityDefinitions:
  api_key:
    type: "apiKey"
    name: "api_key"
    in: "header"
  petstore_auth:
    type: "oauth2"
    authorizationUrl: "https://petstore.swagger.io/oauth/authorize"
    flow: "implicit"
    scopes:
      read:pets: "read your pets"
      write:pets: "modify pets in your account"
definitions:
  ApiResponse:
    type: "object"
    properties:
      code:
        type: "integer"
        format: "int32"
      type:
        type: "string"
      message:
        type: "string"
  Category:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
    xml:
      name: "Category"
  Pet:
    type: "object"
    required:
      - "name"
      - "photoUrls"
    properties:
      id:
        type: "integer"
        format: "int64"
      category:
        $ref: "#/definitions/Category"
      name:
        type: "string"
        example: "doggie"
      photoUrls:
        type: "array"
        xml:
          wrapped: true
        items:
          type: "string"
          xml:
            name: "photoUrl"
      tags:
        type: "array"
        xml:
          wrapped: true
        items:
          xml:
            name: "tag"
          $ref: "#/definitions/Tag"
      status:
        type: "string"
        description: "pet status in the store"
        enum:
          - "available"
          - "pending"
          - "sold"
    xml:
      name: "Pet"
  Tag:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
    xml:
      name: "Tag"
  Order:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      petId:
        type: "integer"
        format: "int64"
      quantity:
        type: "integer"
        format: "int32"
      shipDate:
        type: "string"
        format: "date-time"
      status:
        type: "string"
        description: "Order Status"
        enum:
          - "placed"
          - "approved"
          - "delivered"
      complete:
        type: "boolean"
    xml:
      name: "Order"
  User:
    type: "object"
    properties:
      firstName:
        type: "string"
      lastName:
        type: "string"
      email:
        type: "string"
      password:
        type: "string"

  UserID:
    type: "object"
    properties:
      userID:
        type: "integer"
        format: "int32"

  AddressID: 
    type: "object"
    properties:
      addressID:
        type: "integer"
        format: "int32"
      
  AddressID:
    type: "object"
    properties:
      addressID:
        type: "integer"
        format: "int32"

  login_success:
    type: "object"
    properties:
      FirstName:
        type: "string"
      LastName:
        type: "string"
      AccountNumber:
        type: "string"
      Email:
        type: "string"
      UserID:
        type: "integer"
        format: "int32"

  addresses_per_user_success:
    type: "object"
    properties:
      AddressLine1:
        type: "string"
      AddressLine2:
        type: "string"
      City:
        type: "string"
      State:
        type: "string"
      ZipCode:
        type: "string"
      AddressID:
        type: "integer"
        format: "int32"

  
  
  
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"